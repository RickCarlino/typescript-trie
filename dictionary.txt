var
a:middle
tri
until
buffer:size
f:between?
sigil:!
]
s:split
s:split/char
f:negate
v:inc-by
n:square
n:to-string
tab
b:store
socket:accept
NoEcho
core:resume
sigil:^
core:pause
s:case
ASCII:CR
does
ASCII:DC3
s:index/char
s:chop
hex
s:contains-char?
f:E1
TempStrings
a:index/string
unhook
,
class:data
n:strictly-positive?
e:min?
if
a:from-string
s:append
repeat
file:R+
c:digit?
c:lowercase?
f:square
c:-whitespace?
a:fetch
file:W
apply/3
ASCII:BS
a:dup
f:over
compiling?
f:sin
f:-eq?
compile:jump
f:gt?
s:length
socket:bind
s:prepend
compile:call
sigil:\
TempStringMax
socket:send
f:pop
decimal
n:min
f:lt?
buffer:start
b:to-byte-address
s:trim-left
unix:system
s:trim
spread/3
ASCII:SO
s:evaluate
clock:minute
v:inc
s:substr
s:right
s:split/string
s:PUNCTUATION
f:drop-pair
STRINGS
n:random
e:-INF
s:hash
d
or
n:positive?
TIB
push
xor
f:-inf?
here
ASCII:FF
s:filter
file:close
f:negative?
ASCII:ACK
allot
a:reverse
c:-vowel?
unix:putenv
core:read/reg
s:tokenize
ASCII:DC2
+
i
choose
ASCII:DC4
io:unix-syscall
spread/2
cleave/3
-if
n:dec
compile:lit
clock:timestamp
d:create
buffer:end
buffer:empty
c:get
clock:utc:month
clock:utc:second
clock:utc:year
d:words-beginning-with
copy
file:open
nl
indexed-times
n:to-float
s:index/string
c:to-upper
socket:connect
FREE
data
unix:exit
image:save
v:update
ASCII:US
ASCII:ENQ
core:pause-current
f:atan
v:on
c:-digit?
file:write
f:sign
ASCII:GS
c:vowel?
ASCII:STX
socket:recv
clock:hour
io:invoke
unix:pclose
s:reverse
interpret
io:core
d:class
c:uppercase?
buffer:set
file:R
s:contains-string?
EOM
bi*
{{
ASCII:BEL
f:signed-square
abort
f:to-number
s:WHITESPACE
set-hook
c:visible?
reset
n:odd?
f:put
Heap
ASCII:DLE
ASCII:RS
file:seek
script:abort-include
Base
d:words
unix:exec1
a:store
unix:popen
sigil:#
s:contains/string?
drop
f:case
ASCII:SI
f:log
while
case
sigil:$
s:ASCII-LOWERCASE
h:fetch
c:to-lower
unix:kill
f:INF
s:contains/char?
clock:month
buffer:preserve
socket:gethostbyname
}}
s:DIGITS
s:tokenize-on-string
e:inf?
c:letter?
sp
pack
a:counted-results
sigil:.
tri@
a:reduce
d:words-with
socket:close
n:zero?
f:dup-pair
a:eq?
f:eq?
io:enumerate
ASCII:FS
pop
n:-zero?
over
curry
float:operation
f:power
unix:wait
0;
and
a:length
a:contains/string?
file:for-each-line
s:fetch
f:E
clock:second
n:abs
d:last
r
unix:sleep
a:to-string
sigil:&
f:/
file:A
s:begins-with?
unix:exec0
c:consonant?
f:max
-
w:store
file:read
file:open-for-append
clock:day
d:xt
a:copy
?dup
apply/2
io:scan-for
lteq?
n:MIN
e:NAN
a:left
clear
parse-until
sigil:@
ScopeList
ASCII:DEL
file:flush
f:to-e
f:tuck
f:NAN
unpack
core:write/reg
script:arguments
s:store
a:append
;
n:put
clock:utc:day
script:current-file
f:*
s:to-upper
primitive
dump-stack
buffer:get
script:current-line
d:name
n:between?
lt?
unix:exec2
s:put
-if;
f:depth
c:-visible?
ASCII:HT
n:MAX
s:skip
nip
ASCII:CAN
d:add-header
v:dec-by
fetch
n:negate
tri*
f:drop
cleave/2
e:n?
f:swap

a:make
ASCII:SYN
f:round
ASCII:EM
file:open-for-reading
c:-uppercase?
I
s:ASCII-UPPERCASE
s:map
d:last.class
bi@
f:-
const
f:signed-sqrt
e:clip
f:to-string
unix:execute
unix:pipe
unix:getenv
file:spew
octal
s:split-on-string
again
file:read-line
shift
f:min
a:chop
sigil::
n:max
s:temp
var-n
s:empty
/
s:index-of
---reveal---
class:word
file:size
//
e:INF
s:to-number
v:off
immediate
script:ignore-to-eol
sigil:'
s:replace
n:negative?
clock:year
e:to-f
d:lookup-xt
f:PI
n:sqrt
n:even?
d:last.xt
J
err:notfound
e:MAX
eq?
file:exists?
store
n:limit
TRUE
s:format
Version
K
s:ends-with?
a:begins-with?
[
swap
-eq?
ASCII:EOT
v:limit
script:name
f:dump-stack
core:start
s:trim-right
bye
buffer:add
a:right
f:dup
include
ASCII:SPACE
clock:operation
binary
dup
v:preserve
clock:utc:minute
class:primitive
a:index-of-string
ASCII:NUL
socket:operation
call
s:keep
a:index
file:slurp
forever
ASCII:ETB
w:fetch
f:inc
a:contains-string?
a:filter
}
e:-inf?
class:macro
f:dump-astack
banner
s:const
hook
f:push
depth
h:store
ASCII:SUB
d:for-each
rot
ASCII:DC1
f:inf?
f:adepth
{
unix:slurp-pipe
sigil:|
reorder
unix:get-cwd
f:positive?
file:open-for-writing
b:fetch
d:source
n:inc
a:map
e:nan?
io:query
f:store
s:eq?
e:MIN
Compiler
f:sqrt
sip
a:for-each
file:tell
/mod
gt?
ASCII:ESC
FALSE
s:index-of-string
socket:create
dup-pair
unix:exec3
e:put
ASCII:ETX
f:ceiling
fetch-next
d:last.name
(
f:cos
times
dip
n:pow
$
store-next
e:zero?
f:fetch
Dictionary
f:tan
c:whitespace?
s:replace-all
s:for-each
file:operation
not
a:ends-with?
drop-pair
s:left
core:init
f:+
listen
unix:fork
tuck
c:put
ASCII:VT
f:floor
unix:count-files-in-cwd
ASCII:LF
c:toggle-case
clock:utc:hour
s:ASCII-LETTERS
socket:listen
s:to-float
c:to-number
s:to-lower
a:prepend
RewriteUnderscores
socket:configure
f:nan?
f:rot
a:th
if;
a:-eq?
v:dec
a:contains?
script:get-argument
bi
mod
e:max?
*
f:acos
c:-lowercase?
)
f:abs
reclass
f:nip
unix:getpid
c:to-string
compile:ret
f:limit
ASCII:SOH
sigil:(
unix:chdir
s:get-word
c:-consonant?
d:link
s:copy
sigil:`
ASCII:NAK
s,
unix:for-each-file
f:-INF
d:lookup
f:dec
a:index-of
f:asin
gteq?
file:delete
s:get
'
